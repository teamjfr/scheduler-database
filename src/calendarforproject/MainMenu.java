/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calendarforproject;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.FileDialog;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author HP
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    String[] task_list = new String[1000];
    String[] finishing_time = new String[1000];
    String[] starting_time = new String[1000];
    String[] task_des = new String[1000];
    String[] meeting_list = new String[1000];
    String[] link_list = new String[1000];
    String[] finishing_day = new String[1000];
    String corrected_name = null;
    String corrected_name1 = null;
    String filename;
    String assign_task_name = "";
    String assign_task_description = "";
    String[] group = new String[100];
    String note = null;
    String selected_group;
    JPanel unknown = new JPanel();
    JLabel for_message = new JLabel();
    Connection myconn = null;
    Statement mysmt = null;

    ResultSet myrs = null;
    ResultSet myrs1 = null;
    String[][] assigned_date;
    int group_no;
    int flag_for_assign;
    int flag_for_days;
    ArrayList<String> selected_items;
    JFrame f = new JFrame();

    public MainMenu() {
        initComponents();

        set_visible_false();
        mainmenuPanel.setVisible(true);
        slidebarPanel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        menubarPanel = new javax.swing.JPanel();
        menubar = new javax.swing.JLabel();
        slidebarPanel = new javax.swing.JPanel();
        slidebar = new javax.swing.JLabel();
        mainmenuPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        noteButton = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        taskButton = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        meetingButtom = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        sworkButton = new javax.swing.JLabel();
        back_calendarButton = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cgroupButton = new javax.swing.JLabel();
        assignTaskPanel = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        assignTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignTextArea = new javax.swing.JTextArea();
        singleradio = new javax.swing.JRadioButton();
        multiradio = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        assign_starting_day = new com.toedter.calendar.JDateChooser();
        Date date=new Date();
        SpinnerDateModel sdm=new SpinnerDateModel(date,null,null,Calendar.HOUR_OF_DAY);
        assign_starting_time = new javax.swing.JSpinner(sdm);
        jLabel15 = new javax.swing.JLabel();
        Date date1=new Date();
        SpinnerDateModel sdm1=new SpinnerDateModel(date1,null,null,Calendar.HOUR_OF_DAY);
        assign_finishing_time = new javax.swing.JSpinner(sdm1);
        jLabel17 = new javax.swing.JLabel();
        assign_finishing_day = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        ownradio = new javax.swing.JRadioButton();
        cgroupradio = new javax.swing.JRadioButton();
        otherradio = new javax.swing.JRadioButton();
        groupPanel = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        choice1 = new java.awt.Choice();
        jScrollPane2 = new javax.swing.JScrollPane();
        List1 = new javax.swing.JList<>();
        jLabel23 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        taskPanel = new javax.swing.JPanel();
        taskscrollPanel = new javax.swing.JScrollPane();
        taskMainPanel = new javax.swing.JPanel();
        tasklistPanel = new javax.swing.JPanel();
        duetimePanel = new javax.swing.JPanel();
        duedatePanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        assignmeetingPanel = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        assignlinkTextField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        assignTextArea1 = new javax.swing.JTextArea();
        singleradio1 = new javax.swing.JRadioButton();
        multiradio1 = new javax.swing.JRadioButton();
        weeklist = new javax.swing.JComboBox<>();
        assignTextField1 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        assign_starting_day1 = new com.toedter.calendar.JDateChooser();
        Date date2=new Date();
        SpinnerDateModel sdm2=new SpinnerDateModel(date2,null,null,Calendar.HOUR_OF_DAY);
        assign_starting_time1 = new javax.swing.JSpinner(sdm2);
        jLabel29 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Date date3=new Date();
        SpinnerDateModel sdm3=new SpinnerDateModel(date3,null,null,Calendar.HOUR_OF_DAY);
        assign_finishing_time1 = new javax.swing.JSpinner(sdm3);
        assign_finishing_day1 = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        own1 = new javax.swing.JCheckBox();
        c_group1 = new javax.swing.JCheckBox();
        other1 = new javax.swing.JCheckBox();
        saveButton1 = new javax.swing.JButton();
        meetingPanel = new javax.swing.JPanel();
        meetingscrollPanel = new javax.swing.JScrollPane();
        meetingMainPanel1 = new javax.swing.JPanel();
        meetingnamePanel = new javax.swing.JPanel();
        meetinglinkPanel = new javax.swing.JPanel();
        finishingtimePanel = new javax.swing.JPanel();
        startingtimePanel = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        s_workPanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        assignTextArea2 = new javax.swing.JTextArea();
        assignTextField2 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        saveButton2 = new javax.swing.JButton();
        assign_finishing_day2 = new com.toedter.calendar.JDateChooser();
        assign_starting_day2 = new com.toedter.calendar.JDateChooser();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        Date date4=new Date();
        SpinnerDateModel sdm4=new SpinnerDateModel(date4,null,null,Calendar.HOUR_OF_DAY);
        assign_starting_time2 = new javax.swing.JSpinner(sdm4);
        Date date5=new Date();
        SpinnerDateModel sdm5=new SpinnerDateModel(date5,null,null,Calendar.HOUR_OF_DAY);
        assign_finishing_time2 = new javax.swing.JSpinner(sdm5);
        jLabel1 = new javax.swing.JLabel();
        hourText = new javax.swing.JTextField();
        creategroupPanel = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        emailidText = new javax.swing.JTextField();
        cgroupaddButton = new javax.swing.JButton();
        cgroupdoneButton = new javax.swing.JButton();
        groupnameText = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        List2 = new javax.swing.JList<>();
        notePanel = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        notesaveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(2000, 1050));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menubarPanel.setBackground(new java.awt.Color(0, 51, 51));
        menubarPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menubar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/download.png"))); // NOI18N
        menubar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menubarMouseClicked(evt);
            }
        });
        menubarPanel.add(menubar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.add(menubarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 50, 50));

        slidebarPanel.setBackground(new java.awt.Color(0, 51, 51));
        slidebarPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        slidebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/download (1).png"))); // NOI18N
        slidebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                slidebarMouseClicked(evt);
            }
        });
        slidebarPanel.add(slidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 50, 50));

        jPanel1.add(slidebarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 411, 50));

        mainmenuPanel.setBackground(new java.awt.Color(0, 51, 51));
        mainmenuPanel.setPreferredSize(new java.awt.Dimension(401, 200));
        mainmenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        noteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/note_white.png"))); // NOI18N
        noteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noteButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(noteButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mainmenuPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 405, 410, 50));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        taskButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/task_white.png"))); // NOI18N
        taskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taskButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(taskButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(taskButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainmenuPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 85, 410, 50));

        meetingButtom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/meeting_white.png"))); // NOI18N
        meetingButtom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                meetingButtomMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(meetingButtom)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(meetingButtom, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        mainmenuPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 185, 410, 60));

        sworkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/swork_white.png"))); // NOI18N
        sworkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sworkButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(sworkButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sworkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        mainmenuPanel.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 295, 410, 60));

        back_calendarButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        back_calendarButton.setForeground(new java.awt.Color(255, 255, 255));
        back_calendarButton.setText("Back To Calendar");
        back_calendarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_calendarButtonMouseClicked(evt);
            }
        });
        mainmenuPanel.add(back_calendarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 600, -1, -1));

        cgroupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/group_white.png"))); // NOI18N
        cgroupButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cgroupButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cgroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(cgroupButton)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );

        mainmenuPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 410, 60));

        jPanel1.add(mainmenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 411, 700));

        assignTaskPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(138, 193, 207));
        jPanel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Task Name      :");
        jPanel12.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, -1, -1));

        assignTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTextFieldMouseClicked(evt);
            }
        });
        assignTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTextFieldActionPerformed(evt);
            }
        });
        jPanel12.add(assignTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 559, 37));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("Decription        :");
        jPanel12.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 180, -1));

        assignTextArea.setColumns(20);
        assignTextArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextArea.setRows(5);
        jScrollPane1.setViewportView(assignTextArea);

        jPanel12.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 559, 235));

        buttonGroup1.add(singleradio);
        singleradio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        singleradio.setText("Single Day");
        singleradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleradioActionPerformed(evt);
            }
        });
        jPanel12.add(singleradio, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 430, -1, -1));

        buttonGroup1.add(multiradio);
        multiradio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        multiradio.setText("Multiple Day");
        multiradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiradioActionPerformed(evt);
            }
        });
        jPanel12.add(multiradio, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 430, -1, -1));

        jPanel8.setBackground(new java.awt.Color(138, 193, 207));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Starting Day    :");

        assign_starting_day.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        JSpinner.DateEditor de=new JSpinner.DateEditor(assign_starting_time,"HH:mm");
        assign_starting_time.setEditor(de);
        assign_starting_time.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Starting Time   :");

        JSpinner.DateEditor de1=new JSpinner.DateEditor(assign_finishing_time,"HH:mm");
        assign_finishing_time.setEditor(de1);
        assign_finishing_time.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel17.setText("Finishing Time  :");

        assign_finishing_day.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("Finishing Day   :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel18.setText("Assign For       :");

        saveButton.setBackground(new java.awt.Color(255, 255, 255));
        saveButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(ownradio);
        ownradio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ownradio.setText("Own");
        ownradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownradioActionPerformed(evt);
            }
        });

        buttonGroup2.add(cgroupradio);
        cgroupradio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cgroupradio.setText("Created Group");
        cgroupradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cgroupradioActionPerformed(evt);
            }
        });

        buttonGroup2.add(otherradio);
        otherradio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        otherradio.setText("Others");
        otherradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherradioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)
                        .addGap(19, 19, 19)
                        .addComponent(assign_starting_day, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel15)
                        .addGap(16, 16, 16)
                        .addComponent(assign_starting_time, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(assign_finishing_day, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel17)
                        .addGap(15, 15, 15)
                        .addComponent(assign_finishing_time, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(ownradio)
                        .addGap(41, 41, 41)
                        .addComponent(cgroupradio)
                        .addGap(34, 34, 34)
                        .addComponent(otherradio)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assign_starting_day, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assign_starting_time, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))))
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assign_finishing_day, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assign_finishing_time, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18)
                    .addComponent(ownradio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cgroupradio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(otherradio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53)
                .addComponent(saveButton)
                .addContainerGap())
        );

        jPanel12.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 1020, 320));

        javax.swing.GroupLayout assignTaskPanelLayout = new javax.swing.GroupLayout(assignTaskPanel);
        assignTaskPanel.setLayout(assignTaskPanelLayout);
        assignTaskPanelLayout.setHorizontalGroup(
            assignTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignTaskPanelLayout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 1382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        assignTaskPanelLayout.setVerticalGroup(
            assignTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignTaskPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel1.add(assignTaskPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 1740, 940));

        groupPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(138, 193, 207));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel19.setText("Group Name");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel20.setText("Email Id");

        choice1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        choice1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice1ItemStateChanged(evt);
            }
        });

        List1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        List1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                List1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(List1);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setText("Email ID");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        addButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(addButton)
                                .addGap(42, 42, 42)
                                .addComponent(deleteButton))))
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(deleteButton))))
                .addContainerGap(461, Short.MAX_VALUE))
        );

        jPanel11.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 81, 1280, 760));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/images.jpg"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout groupPanelLayout = new javax.swing.GroupLayout(groupPanel);
        groupPanel.setLayout(groupPanelLayout);
        groupPanelLayout.setHorizontalGroup(
            groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupPanelLayout.createSequentialGroup()
                .addGap(0, 178, Short.MAX_VALUE)
                .addGroup(groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, groupPanelLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, groupPanelLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 1595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137))))
        );
        groupPanelLayout.setVerticalGroup(
            groupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, groupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel1.add(groupPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1910, 1000));

        taskPanel.setBackground(new java.awt.Color(255, 255, 255));

        taskscrollPanel.setBackground(new java.awt.Color(0, 51, 255));

        tasklistPanel.setBackground(new java.awt.Color(138, 193, 207));
        tasklistPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        duetimePanel.setBackground(new java.awt.Color(138, 193, 207));
        duetimePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        duedatePanel.setBackground(new java.awt.Color(138, 193, 207));
        duedatePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 1, 26)); // NOI18N
        jLabel8.setText("Due Date");

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 1, 30)); // NOI18N
        jLabel9.setText("TASK");

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 1, 26)); // NOI18N
        jLabel10.setText("Due Time");

        javax.swing.GroupLayout taskMainPanelLayout = new javax.swing.GroupLayout(taskMainPanel);
        taskMainPanel.setLayout(taskMainPanelLayout);
        taskMainPanelLayout.setHorizontalGroup(
            taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskMainPanelLayout.createSequentialGroup()
                .addGroup(taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskMainPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(tasklistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskMainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addGap(405, 405, 405)))
                .addGroup(taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(taskMainPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel10)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(taskMainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(duedatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duetimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(387, 387, 387))
        );
        taskMainPanelLayout.setVerticalGroup(
            taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskMainPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, taskMainPanelLayout.createSequentialGroup()
                        .addGroup(taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(taskMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duedatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                            .addComponent(duetimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(taskMainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tasklistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(62, 62, 62))
        );

        taskscrollPanel.setViewportView(taskMainPanel);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/images.jpg"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout taskPanelLayout = new javax.swing.GroupLayout(taskPanel);
        taskPanel.setLayout(taskPanelLayout);
        taskPanelLayout.setHorizontalGroup(
            taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1840, Short.MAX_VALUE)
            .addGroup(taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(taskPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(taskscrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, taskPanelLayout.createSequentialGroup()
                    .addContainerGap(1521, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(260, Short.MAX_VALUE)))
        );
        taskPanelLayout.setVerticalGroup(
            taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1050, Short.MAX_VALUE)
            .addGroup(taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(taskPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(taskscrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(taskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(taskPanelLayout.createSequentialGroup()
                    .addComponent(jLabel11)
                    .addGap(0, 1000, Short.MAX_VALUE)))
        );

        jPanel1.add(taskPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1840, 1050));

        assignmeetingPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(138, 193, 207));
        jPanel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel21.setText("Meeting Link    :");
        jPanel13.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, -1, -1));

        assignlinkTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignlinkTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignlinkTextFieldMouseClicked(evt);
            }
        });
        assignlinkTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignlinkTextFieldActionPerformed(evt);
            }
        });
        jPanel13.add(assignlinkTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 559, 37));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel24.setText("Decription        :");
        jPanel13.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 180, -1));

        assignTextArea1.setColumns(20);
        assignTextArea1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextArea1.setRows(5);
        jScrollPane3.setViewportView(assignTextArea1);

        jPanel13.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 205, 559, 190));

        buttonGroup1.add(singleradio1);
        singleradio1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        singleradio1.setText("Single Day");
        singleradio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleradio1ActionPerformed(evt);
            }
        });
        jPanel13.add(singleradio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 430, -1, -1));

        buttonGroup1.add(multiradio1);
        multiradio1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        multiradio1.setText("Multiple Day");
        multiradio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiradio1ActionPerformed(evt);
            }
        });
        jPanel13.add(multiradio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 430, -1, -1));

        weeklist.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        weeklist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        jPanel13.add(weeklist, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 430, 140, 30));

        assignTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTextField1MouseClicked(evt);
            }
        });
        assignTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTextField1ActionPerformed(evt);
            }
        });
        jPanel13.add(assignTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 559, 37));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel34.setText("Meeting Title    :");
        jPanel13.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        jPanel9.setBackground(new java.awt.Color(138, 193, 207));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel25.setText("Starting Day    :");

        assign_starting_day1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        JSpinner.DateEditor de2=new JSpinner.DateEditor(assign_starting_time1,"HH:mm");
        assign_starting_time1.setEditor(de2);
        assign_starting_time1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel29.setText("Starting Time   :");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel27.setText("Finishing Time  :");

        JSpinner.DateEditor de3=new JSpinner.DateEditor(assign_finishing_time1,"HH:mm");
        assign_finishing_time1.setEditor(de3);
        assign_finishing_time1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        assign_finishing_day1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel26.setText("Finishing Day   :");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel28.setText("Assign For       :");

        buttonGroup2.add(own1);
        own1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        own1.setText("own");
        own1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                own1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(c_group1);
        c_group1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        c_group1.setText("Created Group");
        c_group1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_group1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(other1);
        other1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        other1.setText("Other");
        other1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other1ActionPerformed(evt);
            }
        });

        saveButton1.setBackground(new java.awt.Color(255, 255, 255));
        saveButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        saveButton1.setText("SAVE");
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addGap(19, 19, 19)
                            .addComponent(assign_starting_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(jLabel29)
                            .addGap(6, 6, 6)
                            .addComponent(assign_starting_time1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel26)
                            .addGap(18, 18, 18)
                            .addComponent(assign_finishing_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jLabel27)
                            .addGap(5, 5, 5)
                            .addComponent(assign_finishing_time1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel28)
                            .addGap(16, 16, 16)
                            .addComponent(own1)
                            .addGap(31, 31, 31)
                            .addComponent(c_group1)
                            .addGap(21, 21, 21)
                            .addComponent(other1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGap(190, 190, 190)
                            .addComponent(saveButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(assign_starting_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(assign_starting_time1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25)
                                .addComponent(jLabel29))))
                    .addGap(26, 26, 26)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(assign_finishing_day1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(assign_finishing_time1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel26)
                                .addComponent(jLabel27))))
                    .addGap(36, 36, 36)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel28)
                        .addComponent(own1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(c_group1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(other1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addComponent(saveButton1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel13.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, 1000, 310));

        javax.swing.GroupLayout assignmeetingPanelLayout = new javax.swing.GroupLayout(assignmeetingPanel);
        assignmeetingPanel.setLayout(assignmeetingPanelLayout);
        assignmeetingPanelLayout.setHorizontalGroup(
            assignmeetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignmeetingPanelLayout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 1382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        assignmeetingPanelLayout.setVerticalGroup(
            assignmeetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignmeetingPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel1.add(assignmeetingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 1740, 940));

        meetingPanel.setBackground(new java.awt.Color(255, 255, 255));

        meetingscrollPanel.setBackground(new java.awt.Color(0, 51, 255));

        meetingnamePanel.setBackground(new java.awt.Color(138, 193, 207));
        meetingnamePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        meetinglinkPanel.setBackground(new java.awt.Color(138, 193, 207));
        meetinglinkPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        finishingtimePanel.setBackground(new java.awt.Color(138, 193, 207));
        finishingtimePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        startingtimePanel.setBackground(new java.awt.Color(138, 193, 207));
        startingtimePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Berlin Sans FB", 1, 26)); // NOI18N
        jLabel30.setText("Finishing Time");

        jLabel31.setFont(new java.awt.Font("Berlin Sans FB", 1, 30)); // NOI18N
        jLabel31.setText("Meeting Name");

        jLabel32.setFont(new java.awt.Font("Berlin Sans FB", 1, 26)); // NOI18N
        jLabel32.setText("Starting Time");

        jLabel35.setFont(new java.awt.Font("Berlin Sans FB", 1, 30)); // NOI18N
        jLabel35.setText("Meeting Link");

        javax.swing.GroupLayout meetingMainPanel1Layout = new javax.swing.GroupLayout(meetingMainPanel1);
        meetingMainPanel1.setLayout(meetingMainPanel1Layout);
        meetingMainPanel1Layout.setHorizontalGroup(
            meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, meetingMainPanel1Layout.createSequentialGroup()
                .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(meetingnamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(meetinglinkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35)
                        .addGap(108, 108, 108)))
                .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addComponent(startingtimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(finishingtimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30)))
                .addGap(182, 182, 182))
        );
        meetingMainPanel1Layout.setVerticalGroup(
            meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, meetingMainPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel30)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(meetingMainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(meetinglinkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startingtimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(finishingtimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(meetingMainPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(meetingnamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)))
                .addGap(62, 62, 62))
        );

        meetingscrollPanel.setViewportView(meetingMainPanel1);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/images.jpg"))); // NOI18N
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout meetingPanelLayout = new javax.swing.GroupLayout(meetingPanel);
        meetingPanel.setLayout(meetingPanelLayout);
        meetingPanelLayout.setHorizontalGroup(
            meetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, meetingPanelLayout.createSequentialGroup()
                .addContainerGap(1628, Short.MAX_VALUE)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
            .addGroup(meetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, meetingPanelLayout.createSequentialGroup()
                    .addContainerGap(200, Short.MAX_VALUE)
                    .addComponent(meetingscrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(148, Short.MAX_VALUE)))
        );
        meetingPanelLayout.setVerticalGroup(
            meetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meetingPanelLayout.createSequentialGroup()
                .addComponent(jLabel33)
                .addGap(0, 1000, Short.MAX_VALUE))
            .addGroup(meetingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, meetingPanelLayout.createSequentialGroup()
                    .addContainerGap(55, Short.MAX_VALUE)
                    .addComponent(meetingscrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        jPanel1.add(meetingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1840, 1050));

        s_workPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(138, 193, 207));
        jPanel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel37.setText("Decription        :");
        jPanel14.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 180, -1));

        assignTextArea2.setColumns(20);
        assignTextArea2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextArea2.setRows(5);
        jScrollPane4.setViewportView(assignTextArea2);

        jPanel14.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 559, 190));

        assignTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTextField2MouseClicked(evt);
            }
        });
        assignTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignTextField2ActionPerformed(evt);
            }
        });
        jPanel14.add(assignTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 559, 37));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel38.setText("Task Name      :");
        jPanel14.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        saveButton2.setBackground(new java.awt.Color(255, 255, 255));
        saveButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        saveButton2.setText("SAVE");
        saveButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton2ActionPerformed(evt);
            }
        });
        jPanel14.add(saveButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 720, 110, -1));

        assign_finishing_day2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.add(assign_finishing_day2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 520, 300, 44));

        assign_starting_day2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.add(assign_starting_day2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 440, 296, 44));

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel40.setText("Starting Time   :");
        jPanel14.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 450, -1, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel41.setText("Finishing Time  :");
        jPanel14.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 520, -1, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel42.setText("Finishing Day   :");
        jPanel14.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 530, -1, -1));

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel39.setText("Starting Day    :");
        jPanel14.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, -1, -1));

        JSpinner.DateEditor de4=new JSpinner.DateEditor(assign_starting_time2,"HH:mm");
        assign_starting_time2.setEditor(de4);
        assign_starting_time2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.add(assign_starting_time2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 440, 110, 40));

        JSpinner.DateEditor de5=new JSpinner.DateEditor(assign_finishing_time2,"HH:mm");
        assign_finishing_time2.setEditor(de5);
        assign_finishing_time2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.add(assign_finishing_time2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 510, 110, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Required Hour/s");
        jPanel14.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 620, 180, -1));

        hourText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel14.add(hourText, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 620, 150, 40));

        javax.swing.GroupLayout s_workPanelLayout = new javax.swing.GroupLayout(s_workPanel);
        s_workPanel.setLayout(s_workPanelLayout);
        s_workPanelLayout.setHorizontalGroup(
            s_workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(s_workPanelLayout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 1382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        s_workPanelLayout.setVerticalGroup(
            s_workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(s_workPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel1.add(s_workPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 1740, 940));

        creategroupPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(138, 193, 207));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel36.setText("Group Name");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel44.setText("Email ID");

        emailidText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cgroupaddButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cgroupaddButton.setText("ADD");
        cgroupaddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cgroupaddButtonActionPerformed(evt);
            }
        });

        cgroupdoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cgroupdoneButton.setText("Done");
        cgroupdoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cgroupdoneButtonActionPerformed(evt);
            }
        });

        groupnameText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jScrollPane5.setViewportView(List2);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(cgroupdoneButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cgroupaddButton)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(groupnameText)
                                    .addComponent(emailidText, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(groupnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailidText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44))
                        .addGap(72, 72, 72)
                        .addComponent(cgroupaddButton))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(cgroupdoneButton)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jPanel15.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 181, 1280, 470));

        javax.swing.GroupLayout creategroupPanelLayout = new javax.swing.GroupLayout(creategroupPanel);
        creategroupPanel.setLayout(creategroupPanelLayout);
        creategroupPanelLayout.setHorizontalGroup(
            creategroupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creategroupPanelLayout.createSequentialGroup()
                .addGap(0, 178, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 1595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );
        creategroupPanelLayout.setVerticalGroup(
            creategroupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creategroupPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel1.add(creategroupPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1910, 1000));

        notePanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel16.setBackground(new java.awt.Color(234, 231, 220));

        noteTextArea.setColumns(20);
        noteTextArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noteTextArea.setRows(5);
        jScrollPane6.setViewportView(noteTextArea);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/button 1(9).png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        notesaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarforproject/button 1(10).png"))); // NOI18N
        notesaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notesaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notesaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notesaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout notePanelLayout = new javax.swing.GroupLayout(notePanel);
        notePanel.setLayout(notePanelLayout);
        notePanelLayout.setHorizontalGroup(
            notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        notePanelLayout.setVerticalGroup(
            notePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notePanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel1.add(notePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1840, 1050));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assignTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTextFieldMouseClicked
        // TODO add your handling code here:
        assignTextField.setText(assign_task_name);
    }//GEN-LAST:event_assignTextFieldMouseClicked

    private void assignTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTextFieldActionPerformed
        // TODO add your handling code here:
        assign_task_name = assignTextField.getText();
    }//GEN-LAST:event_assignTextFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat sdf1 = new SimpleDateFormat("HH:mm:ss");
        String[] members = new String[1000];
        int count_members = 0;

        if (!assignTextField.getText().equals("")) {
            if (flag_for_assign == 1) {
                members[0] = Login.login_email_id;
                count_members = 1;
            } else if (flag_for_assign == 2) {
                int i = 0;
                try {
                    myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                    mysmt = myconn.createStatement();
                    myrs = mysmt.executeQuery("select group_emailid from user_group where emailid='" + Login.login_email_id
                            + "' and group_name='" + selected_group + "'");
                    while (myrs.next()) {
                        members[i] = myrs.getString("group_emailid");
                        i++;
                    }
                    count_members = i;
                    System.out.println(i);
                    myrs.close();
                    mysmt.close();
                    myconn.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }

            } else if (flag_for_assign == 3) {

                count_members = AssignFrame.totalmembers;
                for (int k = 0; k < count_members; k++) {
                    members[k] = AssignFrame.assigned_memebers[k];
                }
            }
            if (flag_for_days == 0) {
                assign_finishing_day.setDate(assign_starting_day.getDate());
            }

            String a = sdf.format(assign_starting_day.getDate());
            Calendar c = Calendar.getInstance();
            try {
                c.setTime(sdf.parse(a));
            } catch (ParseException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

            a = sdf.format(assign_finishing_day.getDate());
            Calendar c1 = Calendar.getInstance();
            try {
                c1.setTime(sdf.parse(a));
            } catch (ParseException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

            while (!c.after(c1)) {

                try {
                    myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                    mysmt = myconn.createStatement();
                    String sql = "insert into task_database(date,emailid,task_name,task_description,starting_time,finishing_time,check_status,finishing_date,multiday) values(?,?,?,?,?,?,?,?,?)";
                    PreparedStatement pstmt = myconn.prepareStatement(sql);
                    for (int x = 0; x < count_members; x++) {
                        pstmt.setString(1, sdf.format(c.getTime()));
                        pstmt.setString(2, members[x]);
                        pstmt.setString(3, assignTextField.getText());
                        pstmt.setString(4, assignTextArea.getText());
                        pstmt.setString(5, sdf1.format(assign_starting_time.getValue()));
                        pstmt.setString(6, sdf1.format(assign_finishing_time.getValue()));
                        pstmt.setInt(7, 0);
                        pstmt.setString(8, sdf.format(assign_finishing_day.getDate()));
                        pstmt.setInt(9, flag_for_days);
                        pstmt.executeUpdate();
                    }
                    mysmt.close();
                    myconn.close();
                    pstmt.close();
                    c.add(Calendar.DATE, 1);
                    System.out.println("bajbda");

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(f, e);

                }
            }
            JOptionPane.showMessageDialog(f, "Assign Successfully.");
        } else {
            System.out.println("AAAAAweqrfdce");
        }
        set_visible_false();
        mainmenuPanel.setVisible(true);
        slidebarPanel.setVisible(true);

    }//GEN-LAST:event_saveButtonActionPerformed

    private void singleradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleradioActionPerformed
        // TODO add your handling code here:
        flag_for_days = 0;
        jPanel8.setVisible(true);
        assign_finishing_day.setVisible(false);
        jLabel16.setVisible(false);
    }//GEN-LAST:event_singleradioActionPerformed

    private void multiradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiradioActionPerformed
        // TODO add your handling code here:
        flag_for_days = 1;
        jPanel8.setVisible(true);
        assign_finishing_day.setVisible(true);
        jLabel16.setVisible(true);
    }//GEN-LAST:event_multiradioActionPerformed

    private void assignlinkTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignlinkTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_assignlinkTextFieldMouseClicked

    private void assignlinkTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignlinkTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignlinkTextFieldActionPerformed

    private void own1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_own1ActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 1;
    }//GEN-LAST:event_own1ActionPerformed

    private void c_group1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_group1ActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 2;
        assign_for_group();
    }//GEN-LAST:event_c_group1ActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat sdf1 = new SimpleDateFormat("HH:mm:ss");
        String[] members = new String[1000];
        int count_members = 0;
        int date_chosen = 0;
        if (!assignTextField1.getText().equals("") && !assignlinkTextField.getText().equals("")) {
            if (flag_for_assign == 1) {
                members[0] = Login.login_email_id;
                count_members = 1;
            } else if (flag_for_assign == 2) {
                int i = 0;
                try {
                    myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                    mysmt = myconn.createStatement();
                    myrs = mysmt.executeQuery("select group_emailid from user_group where emailid='" + Login.login_email_id
                            + "' and group_name='" + selected_group + "'");
                    while (myrs.next()) {
                        members[i] = myrs.getString("group_emailid");
                        i++;
                    }
                    count_members = i;
                    System.out.println(i);
                    myrs.close();
                    mysmt.close();
                    myconn.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }

            } else if (flag_for_assign == 3) {

                count_members = AssignFrame.totalmembers;
                for (int k = 0; k < count_members; k++) {
                    members[k] = AssignFrame.assigned_memebers[k];
                }
            }

            String a = sdf.format(assign_starting_day1.getDate());
            Calendar c = Calendar.getInstance();
            try {
                c.setTime(sdf.parse(a));
            } catch (ParseException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (flag_for_days == 0) {
                assign_finishing_day1.setDate(assign_starting_day1.getDate());
                date_chosen = c.get(Calendar.DAY_OF_WEEK);
            } else if (flag_for_days == 1) {
                if (weeklist.getSelectedItem() == "Sunday") {
                    date_chosen = 1;
                } else if (weeklist.getSelectedItem() == "Monday") {
                    date_chosen = 2;
                } else if (weeklist.getSelectedItem() == "Tuesday") {
                    date_chosen = 3;
                } else if (weeklist.getSelectedItem() == "Wednesday") {
                    date_chosen = 4;
                } else if (weeklist.getSelectedItem() == "Thursday") {
                    date_chosen = 5;
                } else if (weeklist.getSelectedItem() == "Friday") {
                    date_chosen = 6;
                } else if (weeklist.getSelectedItem() == "Saturday") {
                    date_chosen = 7;
                }
            }

            a = sdf.format(assign_finishing_day1.getDate());
            Calendar c1 = Calendar.getInstance();
            try {
                c1.setTime(sdf.parse(a));
            } catch (ParseException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(date_chosen + "!@#$!#$!");
            System.out.println(sdf.format(c.getTime()) + " " + sdf.format(c1.getTime()));
            while (!c.after(c1)) {
                if (c.get(Calendar.DAY_OF_WEEK) == date_chosen) {

                    try {
                        myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                        mysmt = myconn.createStatement();
                        String sql = "insert into meeting_database(date,emailid,meeting_name,meeting_link,starting_time,finishing_time,description) values(?,?,?,?,?,?,?)";
                        PreparedStatement pstmt = myconn.prepareStatement(sql);
                        for (int x = 0; x < count_members; x++) {
                            pstmt.setString(1, sdf.format(c.getTime()));
                            pstmt.setString(2, members[x]);
                            pstmt.setString(3, assignTextField1.getText());
                            pstmt.setString(4, assignlinkTextField.getText());
                            pstmt.setString(5, sdf1.format(assign_starting_time1.getValue()));
                            pstmt.setString(6, sdf1.format(assign_finishing_time1.getValue()));
                            pstmt.setString(7, assignTextArea1.getText());
                            pstmt.executeUpdate();
                        }
                        mysmt.close();
                        myconn.close();
                        pstmt.close();
                        c.add(Calendar.DATE, 1);
                        System.out.println("bajbda");

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(f, e);

                    }

                } else {
                    c.add(Calendar.DATE, 1);
                }
            }
            JOptionPane.showMessageDialog(f, "Assign Successfully.");
        } else {
            JOptionPane.showMessageDialog(f, "Meeting Name Can Not be Empty");
            set_visible_false();
            mainmenuPanel.setVisible(true);
            slidebarPanel.setVisible(true);
        }
        set_visible_false();
        mainmenuPanel.setVisible(true);
        slidebarPanel.setVisible(true);
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void other1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other1ActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 3;
        AssignFrame af = new AssignFrame();
        af.setVisible(true);
    }//GEN-LAST:event_other1ActionPerformed

    private void singleradio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleradio1ActionPerformed
        // TODO add your handling code here:
        flag_for_days = 0;
        jPanel9.setVisible(true);
        assign_finishing_day1.setVisible(false);
        jLabel26.setVisible(false);
        weeklist.setVisible(false);
    }//GEN-LAST:event_singleradio1ActionPerformed

    private void multiradio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiradio1ActionPerformed
        // TODO add your handling code here:
        flag_for_days = 1;
        jPanel9.setVisible(true);
        assign_finishing_day1.setVisible(true);
        jLabel26.setVisible(true);
        weeklist.setVisible(true);
    }//GEN-LAST:event_multiradio1ActionPerformed

    private void assignTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTextField1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_assignTextField1MouseClicked

    private void assignTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignTextField1ActionPerformed

    private void slidebarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slidebarMouseClicked
        // TODO add your handling code here:
        mainmenuPanel.setVisible(false);
        slidebarPanel.setVisible(false);
        menubarPanel.setVisible(true);
    }//GEN-LAST:event_slidebarMouseClicked

    private void menubarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menubarMouseClicked
        // TODO add your handling code here:
        menubarPanel.setVisible(false);
        mainmenuPanel.setVisible(true);
        slidebarPanel.setVisible(true);
    }//GEN-LAST:event_menubarMouseClicked

    private void taskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskButtonMouseClicked
        // TODO add your handling code here:
        set_visible_false();
        menubarPanel.setVisible(true);
        taskPanel.setVisible(true);
        show_task();
    }//GEN-LAST:event_taskButtonMouseClicked

    private void meetingButtomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_meetingButtomMouseClicked
        // TODO add your handling code here:
        set_visible_false();
        menubarPanel.setVisible(true);
        meetingPanel.setVisible(true);
        show_meeting_link();

    }//GEN-LAST:event_meetingButtomMouseClicked

    private void sworkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sworkButtonMouseClicked
        // TODO add your handling code here:
        set_visible_false();
        s_workPanel.setVisible(true);
        menubarPanel.setVisible(true);
    }//GEN-LAST:event_sworkButtonMouseClicked

    private void back_calendarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_calendarButtonMouseClicked
        // TODO add your handling code here:
        calendar cal_1 = new calendar();
        cal_1.setVisible(true);
        cal_1.setBounds(0, 0, 1940, 1050);
        dispose();

    }//GEN-LAST:event_back_calendarButtonMouseClicked

    private void cgroupButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cgroupButtonMouseClicked
        // TODO add your handling code here:
        set_visible_false();
        groupPanel.setVisible(true);
        menubarPanel.setVisible(true);
        add_group_combobox();
    }//GEN-LAST:event_cgroupButtonMouseClicked

    private void noteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteButtonMouseClicked
        // TODO add your handling code here:
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            myrs = mysmt.executeQuery("select notes from note_database where emailid='" + Login.login_email_id + "' and date='" + calendar.selected_date + "'");
            while (myrs.next()) {
                noteTextArea.setText(myrs.getString("notes"));
            }
            myrs.close();
            mysmt.close();
            myconn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        if (noteTextArea.getText().equals("")) {
            try {
                myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                mysmt = myconn.createStatement();
                String sql = "insert into note_database(date,emailid,notes) values(?,?,?)";
                PreparedStatement pstmt = myconn.prepareStatement(sql);
                pstmt.setString(1, calendar.selected_date);
                pstmt.setString(2, Login.login_email_id);
                pstmt.setString(3, "Write Here");
                pstmt.executeUpdate();
                mysmt.close();
                myconn.close();
                pstmt.close();

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(f, e);

            }
        }
        set_visible_false();
        notePanel.setVisible(true);
        menubarPanel.setVisible(true);
    }//GEN-LAST:event_noteButtonMouseClicked

    private void ownradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ownradioActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 1;
        System.out.println(flag_for_assign);
    }//GEN-LAST:event_ownradioActionPerformed

    private void cgroupradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cgroupradioActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 2;
        System.out.println(flag_for_assign);
        assign_for_group();

    }//GEN-LAST:event_cgroupradioActionPerformed

    private void otherradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherradioActionPerformed
        // TODO add your handling code here:
        flag_for_assign = 3;
        System.out.println(flag_for_assign);
        AssignFrame af = new AssignFrame();
        af.setVisible(true);
        af.setLocation(1200, 200);

    }//GEN-LAST:event_otherradioActionPerformed

    private void assignTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTextField2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_assignTextField2MouseClicked

    private void assignTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignTextField2ActionPerformed

    private void saveButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton2ActionPerformed
        // TODO add your handling code here:
        if (!assignTextField2.getText().equals("")) {
            JPanel mypane = new JPanel();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss");
            String starting_date = sdf.format(assign_starting_day2.getDate());
            String finishing_date = sdf.format(assign_finishing_day2.getDate());
            JComboBox[] chosen_date_combo;
            long difference_In_Days = 0;
            Date d1 = null, d2 = null;
            System.out.println(finishing_date);
            int per_day = 0;
            try {

                d1 = sdf.parse(starting_date);
                d2 = sdf.parse(finishing_date);

                long difference_In_Time = d2.getTime() - d1.getTime();
                difference_In_Days = (difference_In_Time / (1000 * 60 * 60 * 24)) + 1;
                System.out.println(difference_In_Days);
                per_day = (int) Math.ceil(Integer.parseInt(hourText.getText()) / difference_In_Days);
                per_day = per_day * 60;
                System.out.println(per_day);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            Calendar c = Calendar.getInstance();
            String r = sdf1.format(assign_starting_day2.getDate());
            try {
                c.setTime(sdf1.parse(r));
            } catch (ParseException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(sdf1.format(c.getTime()));
            String[][] assigned_date = null;
            String[][] free_time = null;
            String[] s_t = new String[25];
            String[] f_t = new String[25];
            String[] s_t1 = new String[25];
            String[] f_t1 = new String[25];
            chosen_date_combo = new JComboBox[(int) difference_In_Days];
            for (int v = 1; v <= difference_In_Days; v++) {

                int i = 0, j = 0;
                try {
                    myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                    mysmt = myconn.createStatement();
                    myrs = mysmt.executeQuery("select starting_time,finishing_time from meeting_database where emailid='" + Login.login_email_id + "' and date='" + sdf1.format(c.getTime()) + "'");
                    System.out.println(sdf1.format(c.getTime()));
                    System.out.println(sdf1.format(assign_starting_day2.getDate()));
                    while (myrs.next()) {
                        s_t[i] = myrs.getString("starting_time");
                        f_t[i] = myrs.getString("finishing_time");
                        i++;
                    }
                    System.out.println(i);
                    myrs.close();
                    mysmt.close();
                    myconn.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }

                try {
                    myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                    mysmt = myconn.createStatement();
                    myrs = mysmt.executeQuery("select starting_time,finishing_time from task_database where emailid='" + Login.login_email_id + "' and date='" + sdf1.format(c.getTime()) + "' and multiday=0");
                    System.out.println(sdf1.format(c.getTime()));
                    System.out.println(sdf1.format(assign_starting_day2.getDate()));
                    while (myrs.next()) {
                        s_t1[j] = myrs.getString("starting_time");
                        f_t1[j] = myrs.getString("finishing_time");
                        j++;
                    }
                    System.out.println(i);
                    myrs.close();
                    mysmt.close();
                    myconn.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }

                assigned_date = new String[i + j][2];
                for (int m = 0; m < i; m++) {
                    assigned_date[m][0] = s_t[m];
                    assigned_date[m][1] = f_t[m];
                }
                for (int m = 0; m < j; m++) {
                    assigned_date[m + i][0] = s_t1[m];
                    assigned_date[m + i][1] = f_t1[m];
                }

                Arrays.sort(assigned_date, new Comparator<String[]>() {

                    @Override
                    public int compare(String[] o1, String[] o2) {
                        try {
                            return df.parse(o1[0]).compareTo(df.parse(o2[0]));
                        } catch (ParseException ex) {
                            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        return 0;
                    }
                }
                );
                free_time = new String[i + j + 1][2];
                String last_time = null;
                JLabel[] date_label = new JLabel[(int) difference_In_Days];
                mypane.setLayout(new GridLayout((int) difference_In_Days, 2));
                if (v == 1 && v != difference_In_Days) {
                    free_time[0][0] = df.format(assign_starting_time2.getValue());
                    free_time[0][1] = df.format(assign_starting_time2.getValue());
                    last_time = "23:59:00";
                } else if (v == difference_In_Days && v != 1) {
                    free_time[0][0] = "07:00:00";
                    free_time[0][1] = "07:00:00";
                    last_time = df.format(assign_finishing_time2.getValue());
                } else if (v == difference_In_Days && v == 1) {
                    free_time[0][0] = df.format(assign_starting_time2.getValue());
                    free_time[0][1] = df.format(assign_starting_time2.getValue());
                    last_time = df.format(assign_finishing_time2.getValue());
                } else {
                    free_time[0][0] = "07:00:00";
                    free_time[0][1] = "07:00:00";
                    last_time = "23:59:00";
                }
                System.out.println(free_time[0][0] + " " + free_time[0][1] + " " + last_time);
                int k = 0;
                int index = 0;

                for (int h = 0; h < i + j; h++) {
                    System.out.println(assigned_date[h][0] + " " + assigned_date[h][1]);
                }
                System.out.println(i + j);
                if (i + j == 0) {
                    free_time[0][1] = last_time;
                } else {

                    System.out.println(per_day + "AAAA");

                    while (true) {
                        if (free_time[k][1].equals(last_time)) {
                            break;
                        } else {
                            for (int h = 0; h < i + j; h++) {
                                index = h;
                                if (free_time[k][0].compareTo(assigned_date[h][0]) < 0) {
                                    try {
                                        d1 = df.parse(free_time[k][0]);
                                    } catch (ParseException ex) {
                                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    try {
                                        d2 = df.parse(assigned_date[h][0]);
                                    } catch (ParseException ex) {
                                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    long dif_in_min = ((d2.getTime() - d1.getTime()) / (1000 * 60));
                                    if (dif_in_min >= per_day) {
                                        // System.out.println(dif_in_min);
                                        //  System.out.println("Less");
                                        free_time[k][1] = assigned_date[h][0];
                                        k++;
                                        free_time[k][0] = assigned_date[h][1];
                                        free_time[k][1] = assigned_date[h][1];
                                        break;
                                    } else {
                                        free_time[k][0] = assigned_date[h][1];
                                    }
                                } else if (free_time[k][0].compareTo(assigned_date[h][0]) == 0) {
                                    // System.out.println("Equal");
                                    //  System.out.println(free_time[k][0] + " " + assigned_date[h][0]);
                                    free_time[k][0] = assigned_date[h][1];
                                    free_time[k][1] = assigned_date[h][1];
                                    break;
                                } else if (free_time[k][0].compareTo(assigned_date[h][0]) > 0 && free_time[k][0].compareTo(assigned_date[h][1]) < 0) {
                                    // System.out.println("greater");
                                    // System.out.println(free_time[k][0] + " " + assigned_date[h][0]);
                                    free_time[k][0] = assigned_date[h][1];
                                }
                            }
                            if (index == i + j - 1) {
                                free_time[k][1] = last_time;
                            }
                            {

                            }
                        }
                    }
                }
                date_label[v - 1] = new JLabel(sdf1.format(c.getTime()));
                chosen_date_combo[v - 1] = new JComboBox();

                for (int h = 0; h <= k; h++) {
                    chosen_date_combo[v - 1].addItem("From " + free_time[h][0] + " To " + free_time[h][1]);
                }
                mypane.add(date_label[v - 1]);
                mypane.add(chosen_date_combo[v - 1]);
                mypane.add(Box.createVerticalStrut(15));
                c.add(Calendar.DATE, 1);

            }
            int result = JOptionPane.showConfirmDialog(null, mypane,
                    "Please Select Suitable Time From Each Date", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                String a;
                String s_t2;
                String f_t2;
                long total_free = 0;
                for (int v = 0; v < difference_In_Days; v++) {
                    a = chosen_date_combo[v].getSelectedItem().toString();
                    s_t2 = a.substring(5, 13);
                    f_t2 = (String) a.subSequence(17, a.length());
                    try {
                        d1 = df.parse(s_t2);
                    } catch (ParseException ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        d2 = df.parse(f_t2);
                    } catch (ParseException ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    long dif_in_min = ((d2.getTime() - d1.getTime()) / (1000 * 60));
                    total_free = total_free + dif_in_min;
                }
                if (total_free >= (per_day * difference_In_Days)) {
                    for (int v = (int) (difference_In_Days) - 1; v >= 0; v--) {
                        a = chosen_date_combo[v].getSelectedItem().toString();
                        s_t2 = a.substring(5, 13);
                        f_t2 = (String) a.subSequence(17, a.length());
                        try {
                            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
                            mysmt = myconn.createStatement();
                            String sql = "insert into task_database(date,emailid,task_name,task_description,starting_time,finishing_time,check_status,finishing_date,multiday) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement pstmt = myconn.prepareStatement(sql);
                            pstmt.setString(1, sdf1.format(c.getTime()));
                            pstmt.setString(2, Login.login_email_id);
                            pstmt.setString(3, assignTextField2.getText());
                            pstmt.setString(4, assignTextArea2.getText());
                            pstmt.setString(5, s_t2);
                            pstmt.setString(6, f_t2);
                            pstmt.setInt(7, 0);
                            pstmt.setString(8, sdf1.format(assign_finishing_day2.getDate()));
                            pstmt.setInt(9, 0);
                            pstmt.executeUpdate();

                            mysmt.close();
                            myconn.close();
                            pstmt.close();
                            c.add(Calendar.DATE, -1);
                            System.out.println("bajbda");

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(f, e);

                        }

                    }
                    JOptionPane.showMessageDialog(f, "Assign Successfully.");
                } else {
                    JOptionPane.showMessageDialog(f, "There is no Enough Time Slot.");
                    set_visible_false();
                    mainmenuPanel.setVisible(true);
                    slidebarPanel.setVisible(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(f, "Task Name Can Not be Empty");
            set_visible_false();
            mainmenuPanel.setVisible(true);
            slidebarPanel.setVisible(true);
        }
    }//GEN-LAST:event_saveButton2ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            String sql = "insert into user_group(emailid,group_name,group_emailid) values(?,?,?)";
            PreparedStatement pstmt = myconn.prepareStatement(sql);
            pstmt.setString(1, Login.login_email_id);
            pstmt.setString(2, choice1.getSelectedItem());
            pstmt.setString(3, jTextField1.getText());
            pstmt.executeUpdate();
            add_to_list();
            mysmt.close();
            myconn.close();
            pstmt.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(f, e);

        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int a = selected_items.size();
        System.out.println(selected_items.get(a - 1));
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            String sql = "delete from user_group where emailid='" + Login.login_email_id + "' and group_name='" + choice1.getSelectedItem() + "' and group_emailid=?";
            PreparedStatement pstmt = myconn.prepareStatement(sql);
            for (int x = 0; x < a; x++) {
                pstmt.setString(1, selected_items.get(x));
                pstmt.executeUpdate();
            }
            mysmt.close();
            myconn.close();
            pstmt.close();
            System.out.println("bajbda");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(f, e);

        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void cgroupaddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cgroupaddButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel dlm = new DefaultListModel();
        dlm.addElement(emailidText.getText());
        List2.setModel(dlm);
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            String sql = "insert into user_group(emailid,group_name,group_emailid) values(?,?,?)";
            PreparedStatement pstmt = myconn.prepareStatement(sql);
            pstmt.setString(1, Login.login_email_id);
            pstmt.setString(2, groupnameText.getText());
            pstmt.setString(3, emailidText.getText());
            pstmt.executeUpdate();
            mysmt.close();
            myconn.close();
            pstmt.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(f, e);

        }

    }//GEN-LAST:event_cgroupaddButtonActionPerformed

    private void cgroupdoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cgroupdoneButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(f, "Group Created");
        set_visible_false();
        mainmenuPanel.setVisible(true);
        slidebarPanel.setVisible(true);
    }//GEN-LAST:event_cgroupdoneButtonActionPerformed

    private void choice1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice1ItemStateChanged
        // TODO add your handling code here:
        add_to_list();
    }//GEN-LAST:event_choice1ItemStateChanged

    private void List1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_List1ValueChanged
        // TODO add your handling code here:
        selected_items = (ArrayList<String>) List1.getSelectedValuesList();

    }//GEN-LAST:event_List1ValueChanged

    private void notesaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notesaveButtonActionPerformed
        // TODO add your handling code here:
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            String sql = "update note_database set notes=? where date='" + calendar.selected_date + "' and emailid='" + Login.login_email_id + "'";
            PreparedStatement pstmt = myconn.prepareStatement(sql);
            pstmt.setString(1, noteTextArea.getText());
            pstmt.executeUpdate();
            mysmt.close();
            myconn.close();
            pstmt.close();
            JOptionPane.showMessageDialog(f, "Save Successfully");
            //JOptionPane.showConfirmDialog(f,"Are You Sure Want to Save","Confirm?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(f, e);

        }

    }//GEN-LAST:event_notesaveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileDialog filedialog = new FileDialog(MainMenu.this, "Open File", FileDialog.LOAD);
        filedialog.setVisible(true);

        if (filedialog.getFile() != null) {
            filename = filedialog.getDirectory() + filedialog.getFile();
        }

        try {
            BufferedReader reader = new BufferedReader(new FileReader(filename));
            StringBuilder sb = new StringBuilder();

            String line = null;

            while ((line = reader.readLine()) != null) {
                sb.append(line + "\n");
                noteTextArea.setText(sb.toString());
            }
            reader.close();
        } catch (IOException e) {
            System.out.println("File Not Found");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        set_visible_false();
        assignTaskPanel.setVisible(true);
        jPanel8.setVisible(false);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        // TODO add your handling code here:
        set_visible_false();
        assignmeetingPanel.setVisible(true);
        jPanel9.setVisible(false);
        weeklist.setVisible(false);
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        set_visible_false();
        creategroupPanel.setVisible(true);
    }//GEN-LAST:event_jLabel22MouseClicked

    public void set_visible_false() {
        menubarPanel.setVisible(false);
        slidebarPanel.setVisible(false);
        mainmenuPanel.setVisible(false);
        taskPanel.setVisible(false);
        meetingPanel.setVisible(false);
        assignTaskPanel.setVisible(false);
        assignmeetingPanel.setVisible(false);
        groupPanel.setVisible(false);
        s_workPanel.setVisible(false);
        creategroupPanel.setVisible(false);
        notePanel.setVisible(false);
    }

    public void add_to_list() {
        List1.removeAll();
        DefaultListModel dlm = new DefaultListModel();
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            myrs = mysmt.executeQuery("select distinct group_emailid from user_group where emailid='" + Login.login_email_id + "' and group_name='" + choice1.getSelectedItem() + "'");
            while (myrs.next()) {
                dlm.addElement(myrs.getString("group_emailid"));
                List1.setModel(dlm);
            }
            List1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
            myrs.close();
            mysmt.close();
            myconn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    public void assign_for_group() {
        add_group_combobox();
        int input = JOptionPane.showConfirmDialog(this, choice1, "Select Group", JOptionPane.DEFAULT_OPTION);
        if (input == JOptionPane.OK_OPTION) {
            selected_group = choice1.getSelectedItem();
            System.out.println(selected_group);
        }

    }

    public void add_group_combobox() {
        choice1.removeAll();
        int i = 0;
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            myrs = mysmt.executeQuery("select distinct group_name from user_group where emailid='" + Login.login_email_id + "'");
            while (myrs.next()) {
                group[i] = myrs.getString("group_name");
                choice1.addItem(group[i]);
                i++;
            }
            // List1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
            System.out.println(i);
            myrs.close();
            mysmt.close();
            myconn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        group_no = i;
    }

    public void show_meeting_link() {
        SimpleDateFormat sdf = new SimpleDateFormat("MMM dd yyyy");
        for_message.setFont(new Font("TimesRoman", Font.BOLD, 20));
        int i = 0;
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            myrs = mysmt.executeQuery("select meeting_name,meeting_link,time_format(starting_time,'%h:%i %p') starting_time,time_format(finishing_time,'%h:%i %p') finishing_time,"
                    + "description from meeting_database where emailid='" + Login.login_email_id + "' and date='" + calendar.selected_date + "'");
            while (myrs.next()) {
                meeting_list[i] = myrs.getString("meeting_name");
                link_list[i] = myrs.getString("meeting_link");
                finishing_time[i] = myrs.getString("finishing_time");
                starting_time[i] = myrs.getString("starting_time");
                if (starting_time[i].equals("12:00 AM")) {
                    starting_time[i] = "No Time";
                }
                corrected_name = "";
                corrected_name1 = meeting_list[i];
                for (int j = 1; j <= meeting_list[i].length(); j++) {
                    if (j % 30 == 0) {
                        corrected_name = corrected_name + "\n" + meeting_list[i].charAt(j - 1);
                    } else {
                        corrected_name = corrected_name + meeting_list[i].charAt(j - 1);
                    }
                }
                meeting_list[i] = corrected_name;
                task_des[i] = myrs.getString("description");
                i++;
            }
            System.out.println("AAA");
            System.out.println(i);
            myrs.close();
            mysmt.close();
            myconn.close();
        } catch (SQLException e) {
            System.out.println("AAAAAA");
            System.out.println(e);
        }
        GridLayout layout;
        if (i > 20) {
            layout = new GridLayout(i, 0, 0, 4);
        } else {
            layout = new GridLayout(20, 0, 0, 4);
        }
        meetingnamePanel.removeAll();
        meetinglinkPanel.removeAll();
        startingtimePanel.removeAll();
        finishingtimePanel.removeAll();
        meetingnamePanel.setLayout(layout);
        meetinglinkPanel.setLayout(layout);
        startingtimePanel.setLayout(layout);
        finishingtimePanel.setLayout(layout);
        Font f = new Font("TimesRoman", Font.BOLD, 25);
        javax.swing.border.Border border = BorderFactory.createLineBorder(Color.WHITE, 2);
        JTextArea label[] = new JTextArea[i];
        JTextArea label1[] = new JTextArea[i];
        JTextArea label2[] = new JTextArea[i];
        JTextArea label3[] = new JTextArea[i];
        JButton button[] = new JButton[i];

        for (int j = 0; j < i; j++) {
            label[j] = new JTextArea((meeting_list[j]));
            label[j].setFont(f);
            label[j].setForeground(Color.BLACK);
            label[j].setBorder(border);
            label[j].setEditable(false);
            label1[j] = new JTextArea(finishing_time[j]);
            label1[j].setFont(f);
            label1[j].setBorder(border);
            label1[j].setForeground(Color.BLUE);
            label2[j] = new JTextArea(starting_time[j]);
            label2[j].setFont(f);
            label2[j].setBorder(border);
            label2[j].setForeground(Color.BLUE);
            button[j] = new JButton(link_list[j]);
            button[j].setBackground(Color.WHITE);
            button[j].setFont(f);
            final AtomicReference<String> description = new AtomicReference<String>(task_des[j]);
            label[j].addMouseListener(new MouseAdapter() {
                MessageFrame mf = new MessageFrame();

                public void mouseEntered(MouseEvent e) {
                    mf.setVisible(true);
                    mf.setLocation(1200, 200);
                    String idk = description.toString();
                    mf.show_description(idk);
                }

                public void mouseExited(MouseEvent e) {
                    mf.setVisible(false);
                }

                public void mouseClicked(MouseEvent e) {
                    for_message.setText("Mark As Done?");
                    unknown.add(for_message);
                    int result = JOptionPane.showConfirmDialog(null, unknown, "Done Option", JOptionPane.YES_NO_OPTION);
                    if (result == JOptionPane.YES_OPTION) {
                        System.out.println("YES DONE");
                    }
                }
            });
            final AtomicReference<String> b_text = new AtomicReference<String>(button[j].getText());
            button[j].addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String buttontext = b_text.toString();
                    Desktop d = Desktop.getDesktop();
                    try {
                        d.browse(new URI(buttontext));
                    } catch (URISyntaxException ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            });
            meetingnamePanel.add(label[j]);
            meetinglinkPanel.add(button[j]);
            startingtimePanel.add(label2[j]);
            finishingtimePanel.add(label1[j]);
        }
    }

    public void show_task() {
        System.out.println(calendar.selected_date);
        SimpleDateFormat sdf = new SimpleDateFormat("MMM dd yyyy");
        int i = 0;
        try {
            myconn = DriverManager.getConnection("jdbc:mysql://localhost:3306/users_database", "root", "root");
            mysmt = myconn.createStatement();
            myrs = mysmt.executeQuery("select task_name,task_description,time_format(starting_time,'%h:%i %p') starting_time,time_format(finishing_time,'%h:%i %p') finishing_time"
                    + ",finishing_date from task_database where emailid='" + Login.login_email_id + "' and date='" + calendar.selected_date + "' and check_status=0");
            while (myrs.next()) {
                task_list[i] = myrs.getString("task_name");
                finishing_time[i] = myrs.getString("finishing_time");
                starting_time[i] = myrs.getString("starting_time");
                if (starting_time[i].equals("12:00 AM")) {
                    starting_time[i] = "No Time";
                }
                corrected_name = "";
                corrected_name1 = task_list[i];
                for (int j = 1; j <= task_list[i].length(); j++) {
                    if (j % 40 == 0) {
                        corrected_name = corrected_name + "\n" + task_list[i].charAt(j - 1);
                    } else {
                        corrected_name = corrected_name + task_list[i].charAt(j - 1);
                    }
                }
                task_list[i] = corrected_name;
                task_des[i] = myrs.getString("task_description") + "\n" + "Starting Time :" + starting_time[i];
                finishing_day[i] = myrs.getString("finishing_date");
                i++;
            }
            System.out.println("AAA");
            System.out.println(i);
            myrs.close();
            mysmt.close();
            myconn.close();
        } catch (SQLException e) {
            System.out.println("AAAAAA");
            System.out.println(e);
        }
        GridLayout layout;
        if (i > 20) {
            layout = new GridLayout(i, 0, 0, 4);
        } else {
            layout = new GridLayout(20, 0, 0, 4);
        }
        tasklistPanel.removeAll();
        duetimePanel.removeAll();
        duedatePanel.removeAll();
        tasklistPanel.setLayout(layout);
        duetimePanel.setLayout(layout);
        duedatePanel.setLayout(layout);
        Font f = new Font("TimesRoman", Font.BOLD, 30);
        javax.swing.border.Border border = BorderFactory.createLineBorder(Color.WHITE, 2);
        JTextArea label[] = new JTextArea[i];
        JTextArea label1[] = new JTextArea[i];
        JTextArea label2[] = new JTextArea[i];
        JTextArea label3[] = new JTextArea[i];
        for (int j = 0; j < i; j++) {
            label[j] = new JTextArea((task_list[j]));
            label[j].setFont(f);
            label[j].setForeground(Color.BLACK);
            label[j].setBorder(border);
            label[j].setEditable(false);
            label1[j] = new JTextArea(finishing_time[j]);
            label1[j].setFont(f);
            label1[j].setBorder(border);
            label1[j].setForeground(Color.BLUE);
            label2[j] = new JTextArea(finishing_day[j]);
            label2[j].setFont(f);
            label2[j].setBorder(border);
            label2[j].setForeground(Color.BLUE);
            final AtomicReference<String> description = new AtomicReference<String>(task_des[j]);
            label[j].addMouseListener(new MouseAdapter() {
                MessageFrame mf = new MessageFrame();

                public void mouseEntered(MouseEvent e) {
                    mf.setVisible(true);
                    mf.setLocation(1200, 200);
                    String idk = description.toString();
                    mf.show_description(idk);
                }

                public void mouseExited(MouseEvent e) {
                    mf.setVisible(false);
                }

                public void mouseClicked(MouseEvent e) {
                    for_message.setText("Mark As Done?");
                    unknown.add(for_message);
                    int result = JOptionPane.showConfirmDialog(null, unknown, "Done Option", JOptionPane.YES_NO_OPTION);
                    if (result == JOptionPane.YES_OPTION) {
                        System.out.println("YES DONE");
                    }
                }
            });
            tasklistPanel.add(label[j]);
            duetimePanel.add(label2[j]);
            duedatePanel.add(label1[j]);
        }
        // jPane18.setBounds();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> List1;
    private javax.swing.JList<String> List2;
    private javax.swing.JButton addButton;
    private javax.swing.JPanel assignTaskPanel;
    private javax.swing.JTextArea assignTextArea;
    private javax.swing.JTextArea assignTextArea1;
    private javax.swing.JTextArea assignTextArea2;
    private javax.swing.JTextField assignTextField;
    private javax.swing.JTextField assignTextField1;
    private javax.swing.JTextField assignTextField2;
    private com.toedter.calendar.JDateChooser assign_finishing_day;
    private com.toedter.calendar.JDateChooser assign_finishing_day1;
    private com.toedter.calendar.JDateChooser assign_finishing_day2;
    private javax.swing.JSpinner assign_finishing_time;
    private javax.swing.JSpinner assign_finishing_time1;
    private javax.swing.JSpinner assign_finishing_time2;
    private com.toedter.calendar.JDateChooser assign_starting_day;
    private com.toedter.calendar.JDateChooser assign_starting_day1;
    private com.toedter.calendar.JDateChooser assign_starting_day2;
    private javax.swing.JSpinner assign_starting_time;
    private javax.swing.JSpinner assign_starting_time1;
    private javax.swing.JSpinner assign_starting_time2;
    private javax.swing.JTextField assignlinkTextField;
    private javax.swing.JPanel assignmeetingPanel;
    private javax.swing.JLabel back_calendarButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox c_group1;
    private javax.swing.JLabel cgroupButton;
    private javax.swing.JButton cgroupaddButton;
    private javax.swing.JButton cgroupdoneButton;
    private javax.swing.JRadioButton cgroupradio;
    private java.awt.Choice choice1;
    private javax.swing.JPanel creategroupPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel duedatePanel;
    private javax.swing.JPanel duetimePanel;
    private javax.swing.JTextField emailidText;
    private javax.swing.JPanel finishingtimePanel;
    private javax.swing.JPanel groupPanel;
    private javax.swing.JTextField groupnameText;
    private javax.swing.JTextField hourText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel mainmenuPanel;
    private javax.swing.JLabel meetingButtom;
    private javax.swing.JPanel meetingMainPanel1;
    private javax.swing.JPanel meetingPanel;
    private javax.swing.JPanel meetinglinkPanel;
    private javax.swing.JPanel meetingnamePanel;
    private javax.swing.JScrollPane meetingscrollPanel;
    private javax.swing.JLabel menubar;
    private javax.swing.JPanel menubarPanel;
    private javax.swing.JRadioButton multiradio;
    private javax.swing.JRadioButton multiradio1;
    private javax.swing.JLabel noteButton;
    private javax.swing.JPanel notePanel;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JButton notesaveButton;
    private javax.swing.JCheckBox other1;
    private javax.swing.JRadioButton otherradio;
    private javax.swing.JCheckBox own1;
    private javax.swing.JRadioButton ownradio;
    private javax.swing.JPanel s_workPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton saveButton2;
    private javax.swing.JRadioButton singleradio;
    private javax.swing.JRadioButton singleradio1;
    private javax.swing.JLabel slidebar;
    private javax.swing.JPanel slidebarPanel;
    private javax.swing.JPanel startingtimePanel;
    private javax.swing.JLabel sworkButton;
    private javax.swing.JLabel taskButton;
    private javax.swing.JPanel taskMainPanel;
    private javax.swing.JPanel taskPanel;
    private javax.swing.JPanel tasklistPanel;
    private javax.swing.JScrollPane taskscrollPanel;
    private javax.swing.JComboBox<String> weeklist;
    // End of variables declaration//GEN-END:variables
}
